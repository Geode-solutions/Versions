name: Ecosystem branch check (Python)

on:
  workflow_dispatch:
    inputs:
      branch:
        type: string
        required: true

concurrency:
  group: ${{ inputs.branch }}
  cancel-in-progress: true

jobs:
  validate-PRs:
    uses: Geode-solutions/Versions/.github/workflows/validate-pr.yml@master
    with:
      branch: ${{ inputs.branch }}
      repos: "OpenGeodeWeb-Back;Vease-Back"
    secrets: inherit

  wheels:
    needs: validate-PRs
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: Geode-solutions/actions/get-release@master
        id: repos
        with:
          repository: ${{ needs.validate-PRs.outputs.repos }}
          file: ".whl"
          token: ${{ secrets.TOKEN }}
          branch: ${{ inputs.branch }}
          base: ${{ needs.validate-PRs.outputs.base }}
      - name: Save data to file
        run: echo "${{ steps.repos.outputs.path }}" > repos_path.txt
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}
          path: .

  test:
    needs: [validate-PRs, wheels]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        repo: ${{ fromJSON(needs.validate-PRs.outputs.repos_array) }}
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/download-artifact@v4
        with:
          name: wheels-${{ runner.os }}
      - name: Clone repository
        run: |
          gh auth setup-git
          gh api https://api.github.com/repos/Geode-solutions/open-license-manager/contents/projects/geode/geode.lic -H "Accept: application/vnd.github.raw" > geode.lic
          gh repo clone Geode-solutions/${{ matrix.repo }}
          cd ${{ matrix.repo }}
          if git ls-remote --exit-code --heads origin ${{ inputs.branch }}; then
            echo "found branch ${{ inputs.branch }}"
            git checkout origin/${{ inputs.branch }}
          else
            git checkout origin/${{ needs.validate-PRs.outputs.base }}
          fi
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
      - name: Install dependencies
        run: |
          cd ${{ matrix.repo }}
          pip install -r requirements.txt
          pip install .
          wheels=$(cat ../repos_path.txt | sed 's/\;/\ /g')
          echo $wheels
          if [ -n "$wheels" ]; then 
            pip install --no-deps $wheels
          fi
        shell: bash
      - name: Run tests
        run: |
          cd ${{ matrix.repo }}
          pip install pytest
          pytest
        shell: bash
        env:
          GEODE_LICENSE_LOCATION: ${{ github.workspace }}/geode.lic
      - name: Post to a Slack channel
        if: failure()
        id: slack
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: C0598GTCLGH
          slack-message: "${{ inputs.branch }}: Python merge request failed for ${{ matrix.repo }} on ${{ runner.os }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  merge-PRs:
    needs: [validate-PRs, test]
    uses: Geode-solutions/Versions/.github/workflows/merge-pr.yml@master
    with:
      branch: ${{ inputs.branch }}
      repos: ${{ needs.validate-PRs.outputs.repos }}
    secrets: inherit

  deploy:
    runs-on: ubuntu-latest
    needs: [merge-PRs, validate-PRs]
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: 'Geode-solutions',
              repo: 'Versions',
              workflow_id: 'deploy.yml',
              ref: 'master',
              inputs: { branch: '${{ needs.validate-PRs.outputs.base }}', workflow: 'py' }
            })
      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: C0598GTCLGH
          slack-message: "Merge request for ${{ inputs.branch }} complete :tada:"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
